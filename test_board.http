### 회원가입 및 토큰 얻기
# @name signup
POST http://localhost:8000/auth/signup
Content-Type: application/json

{
    "fullname": "Test User",
    "email": "test123@example.com",
    "password": "testpassword123"
}

> {%
    client.global.set("auth_token", response.body.access_token);
%}

### 2. 새 게시판 생성 (Public)
POST http://localhost:8000/boards
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
    "name": "Test Board",
    "public": true
}

> {%
    client.global.set("board_id", response.body.id);
%}

### 3. 비공개 게시판 생성 (Private)
POST http://localhost:8000/boards
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
    "name": "Private Test Board",
    "public": false
}

### 4. 중복된 게시판 이름으로 생성 시도
POST http://localhost:8000/boards
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
    "name": "Test Board",
    "public": true
}

### 5. 게시판 목록 조회 (기본)
GET http://localhost:8000/boards
Authorization: Bearer {{auth_token}}

### 6. 게시판 목록 조회 (페이지네이션과 정렬)
GET http://localhost:8000/boards?limit=5&sort_by_posts=true
Authorization: Bearer {{auth_token}}

### 7. 특정 게시판 조회
GET http://localhost:8000/boards/{{board_id}}
Authorization: Bearer {{auth_token}}

### 8. 게시판 정보 수정
PUT http://localhost:8000/boards/{{board_id}}
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
    "name": "Updated Board Name",
    "public": false
}

### 9. 게시판 삭제
DELETE http://localhost:8000/boards/{{board_id}}
Authorization: Bearer {{auth_token}}

### 10. 커서 기반 페이지네이션
GET http://localhost:8000/boards
    ?cursor={{cursor}}
    &limit=5
Authorization: Bearer {{auth_token}}

> {%
    if (response.body.next_cursor) {
        client.global.set("cursor", response.body.next_cursor);
    }
%}

### 11. 존재하지 않는 게시판 조회
GET http://localhost:8000/boards/999
Authorization: Bearer {{auth_token}}

### 12. 권한 없는 게시판 접근 시도
# 먼저 다른 사용자로 회원가입
# @name signup2
POST http://localhost:8000/auth/signup
Content-Type: application/json

{
    "fullname": "Another User",
    "email": "another@example.com",
    "password": "anotherpassword123"
}

> {%
    client.global.set("another_token", response.body.access_token);
%}

### 다른 사용자의 비공개 게시판 접근 시도
GET http://localhost:8000/boards/{{board_id}}
Authorization: Bearer {{another_token}} 